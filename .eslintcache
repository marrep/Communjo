[{"/Users/marcel.reperich/Desktop/new-project/communjo/src/index.js":"1","/Users/marcel.reperich/Desktop/new-project/communjo/src/App.js":"2","/Users/marcel.reperich/Desktop/new-project/communjo/src/provider/AuthProvider.js":"3","/Users/marcel.reperich/Desktop/new-project/communjo/src/firebase/authMethods.js":"4","/Users/marcel.reperich/Desktop/new-project/communjo/src/firebase/firebase.js":"5","/Users/marcel.reperich/Desktop/new-project/communjo/src/components/Signup.js":"6","/Users/marcel.reperich/Desktop/new-project/communjo/src/components/Signin.js":"7","/Users/marcel.reperich/Desktop/new-project/communjo/src/components/Home.js":"8"},{"size":334,"mtime":1608647494522,"results":"9","hashOfConfig":"10"},{"size":735,"mtime":1608739942419,"results":"11","hashOfConfig":"10"},{"size":1226,"mtime":1608723115061,"results":"12","hashOfConfig":"10"},{"size":1970,"mtime":1608722682134,"results":"13","hashOfConfig":"10"},{"size":605,"mtime":1608739922828,"results":"14","hashOfConfig":"10"},{"size":1272,"mtime":1608723569514,"results":"15","hashOfConfig":"10"},{"size":1156,"mtime":1608723517715,"results":"16","hashOfConfig":"10"},{"size":336,"mtime":1608723771970,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1lf0c0g",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/marcel.reperich/Desktop/new-project/communjo/src/index.js",[],["36","37"],"/Users/marcel.reperich/Desktop/new-project/communjo/src/App.js",["38"],"/Users/marcel.reperich/Desktop/new-project/communjo/src/provider/AuthProvider.js",[],"/Users/marcel.reperich/Desktop/new-project/communjo/src/firebase/authMethods.js",["39"],"import firebaseconfig from \"./firebase\";\nimport firebase from \"firebase\";\n\nexport const authMethods = {\n  signup: (email, password, setErrors, setToken) => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      //make res asynchronous so that we can make grab the token before saving it.\n      .then(async (res) => {\n        const token = await Object.entries(res.user)[5][1].b;\n        //set token to localStorage\n        await localStorage.setItem(\"token\", token);\n        //grab token from local storage and set to state.\n        setToken(window.localStorage.token);\n        console.log(res);\n      })\n      .catch((err) => {\n        setErrors((prev) => [...prev, err.message]);\n      });\n  },\n  signin: (email, password, setErrors, setToken) => {\n    //change from create users to...\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      //everything is almost exactly the same as the function above\n      .then(async (res) => {\n        const token = await Object.entries(res.user)[5][1].b;\n        //set token to localStorage\n        await localStorage.setItem(\"token\", token);\n        setToken(window.localStorage.token);\n        console.log(res);\n      })\n      .catch((err) => {\n        setErrors((prev) => [...prev, err.message]);\n      });\n  },\n  signout: (setErrors, setToken) => {\n    // signOut is a no argument function\n    firebase\n      .auth()\n      .signOut()\n      .then((res) => {\n        //remove the token\n        localStorage.removeItem(\"token\");\n        //set the token back to original state\n        setToken(null);\n      })\n      .catch((err) => {\n        //there shouldn't every be an error from firebase but just in case\n        setErrors((prev) => [...prev, err.message]);\n        //whether firebase does the trick or not i want my user to do there thing.\n        localStorage.removeItem(\"token\");\n        setToken(null);\n        console.error(err.message);\n      });\n  },\n};\n","/Users/marcel.reperich/Desktop/new-project/communjo/src/firebase/firebase.js",[],"/Users/marcel.reperich/Desktop/new-project/communjo/src/components/Signup.js",[],"/Users/marcel.reperich/Desktop/new-project/communjo/src/components/Signin.js",[],"/Users/marcel.reperich/Desktop/new-project/communjo/src/components/Home.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":1,"column":29,"nodeType":"46","messageId":"47","endLine":1,"endColumn":37},{"ruleId":"44","severity":1,"message":"48","line":1,"column":8,"nodeType":"46","messageId":"47","endLine":1,"endColumn":22},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'firebaseconfig' is defined but never used.","no-global-assign","no-unsafe-negation"]